x = int(input())
def HotBiNeNeud(x):
    if x==1:
        return 1
    if x==0:
        return 0
    return HotBiNeNeud(x-1) + HotBiNeNeud(x-2)

print(HotBiNeNeud(x))

#---первая


def prost(x):
    print(1, x)
    for y in range(2, 10):
        if x % y == 0:
            print(y)
    if y==1:
        print(x)

x = int(input("Введите число: "))
prost(x)

#---вторая




print ('Hello, world!')
def treg(x):
    for y in range(1, x+1):
        print('C'*y)
    for z in range(1, x+1):
        print('C'*(x-z))

x = int(input())
treg(x)

#---четвертая


print('введите колво строк и столбцов')
n = int(input())
m = int(input())
def etomat(n, m):
    mat = [[0] * m for _ in range(n)]
    left, right =0, m - 1
    ceil, floor =0, n - 1
    l = 1

    while left <= right and ceil <= floor:
        for i in range(left, right + 1):
            mat[ceil][i] = l

            l += 1
        ceil += 1

        for i in range(ceil, floor + 1):
            mat[i][right] = l
            l += 1
        right -= 1

        if ceil <= floor:
            for i in range(right, left - 1, -1):
                mat[floor][i] = l
                l += 1
            floor -= 1

        if left <= right:
            for i in range(floor, ceil - 1, -1):
                mat[i][left] = l
                l += 1
            left += 1

    return mat

mat = etomat(n, m)

for enter in mat:
    print(enter)

#---пятая


def mnk():
    zx = input('Введите знач х через запятые: ')
    zy = input('Введите знач у через запятые: ')

    x = list(map(float, zx.split(',')))
    y = list(map(float, zy.split(',')))

    if len(x) != len(y):
        print('Введите одинак колво измерений')
        return

    n = len(x)
    forx= sum(x)
    fory = sum(y)

    forXY = sum(x[i] * y[i] for i in range(n))
    kvadrad = sum(xi ** 2 for xi in x)
    if (n*kvadrad - forx**2) == 0:
        print('Вы провели недостаточно измерений')
    else:
        a = (n * forXY - forx*fory) / (n*kvadrad - forx**2)


        b = (fory - a * forx)/n

        print(a, b)
mnk()

#---шестая

